package util.mapconverter;

import java.io.File;

import util.TextFileUtility;

public class MapConverter {

    public static void main(String[] args) {
	try {
	    String fileURL = "C:\\Users\\Darkxell_mc\\Desktop\\testmap.txt";
	    int width = 40, height = 20;
	    int[][] spritesID = new int[height][width];
	    File f = new File(fileURL);
	    String content = TextFileUtility.getTextFileContent(f);
	    content = content.split("data=")[1];
	    String[] ids = content.split(",");
	    for (int i = 0; i < height; i++)
		for (int j = 0; j < width; j++) {
		    spritesID[i][j] = Integer.parseInt(ids[i * width + j]) - 1;
		}

	    for (int i = 0; i < height; i++) {
		System.out.print("\n!");
		for (int j = 0; j < width; j++) {
		    System.out.print("(" + spritesID[i][j] + "):"
			    + getType(spritesID[i][j])
			    + (j != width - 1 ? ";" : ""));
		}
	    }

	} catch (Exception e) {
	    e.printStackTrace();
	}
    }

    /** Returns the most probable tile type for this sprite. */
    public static int getType(int spriteID) {
	int solidTiles[] = { 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 17,
		18, 25, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 41, 42, 43,
		44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,
		61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
		78, 79, 80, 81, 82, 83, 84, 94, 95, 96, 97, 98, 99, 100, 101,
		102, 103, 104, 106, 107, 109, 113, 114, 115, 116, 117, 118,
		120, 126, 127, 129, 133, 134, 135, 136, 137, 138, 139, 140,
		149, 153, 154, 155, 156, 157, 158, 159, 160, 166, 167, 168,
		169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181,
		182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
		195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208,
		209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
		222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234,
		236, 237, 238, 239, 240, 241, 243, 246, 247, 248, 249, 250,
		251, 252, 253, 254, 255, 256, 257, 260, 261, 263, 264, 265,
		266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 280, 281,
		282, 284, 285, 290, 291, 292, 293, 294, 295, 300, 301, 302,
		304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 352, 353,
		355, 356, 372, 373, 395, 396, 415, 416, 417, 397, 434, 435,
		437, 457, 426, 430, 446, 447, 448, 449, 450, 451, 452, 453,
		460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
		472, 473, 480, 481, 482, 483, 484, 485, 486, 487, 487, 488,
		489, 490, 491, 492, 493, 500, 501, 502, 503, 504, 505, 506,
		507, 508, 509, 510, 511, 512, 513, 520, 521, 522, 523, 524,
		526, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
		541, 542, 543, 544, 548, 549, 550, 551, 552, 553, 554, 555,
		556, 557, 558, 559, 560, 561, 562, 563, 564, 568, 569, 570,
		571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
		584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
		596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608,
		609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620,
		621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
		634, 635, 636, 637, 638, 639 };
	for (int i = 0; i < solidTiles.length; i++)
	    if (solidTiles[i] == spriteID)
		return 1;
	return 0;
    }
}
